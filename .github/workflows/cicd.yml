name: cicd
on:
    push:
        branches:
            - "*"
        paths-ignore:
            - "**.md"
            - "docs/**"
    pull_request:
        branches:
            - "*"
        paths-ignore:
            - "**.md"
            - "docs/**"

jobs:
    lint-and-test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"
                  cache: "pip"

            - run: |
                  pip install poetry
                  poetry config virtualenvs.create false

            # Install all deps. for pyright to be able to run type checking
            - run: poetry install

            # Lint with type checking
            - run: black --check .
            - run: isort --check .
            - run: pyright

            - name: Run Tests
              run: python -m pytest

    # Only runs on push to main branch
    build-and-push:
        needs: lint-and-test
        runs-on: ubuntu-latest
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - uses: actions/checkout@v3
            - uses: docker/setup-buildx-action@v3

            - name: Set env
              run: |
                  GITHUB_SHA_SHORT=$(git rev-parse --short "$GITHUB_SHA")
                  echo DOCKER_TAG_LATEST=${{ secrets.DOCKERHUB_REPO }}:latest-${{ github.event.repository.name }} >> $GITHUB_ENV
                  echo DOCKER_TAG_SHA=${{ secrets.DOCKERHUB_REPO }}:$GITHUB_SHA_SHORT-${{ github.event.repository.name }} >> $GITHUB_ENV

            - uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and Push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./docker/Dockerfile
                  push: true
                  # Use multi arch build, to support arm64 (e.g. Raspberry Pi)
                  platforms: linux/amd64,linux/arm64
                  tags: |
                      ${{ env.DOCKER_TAG_LATEST}}
                      ${{ env.DOCKER_TAG_SHA}}
                  cache-from: type=registry,ref=${{ env.DOCKER_TAG_LATEST}}
                  cache-to: type=inline
